var Emitter  = require('events').EventEmitter;
var nopt     = require('nopt');
// var FileUtil = require ("file-utils").File;
var path     = require('path');

var template = require('../util/template');
var help     = require('./help');
var config   = require('../core/config');

var optionTypes = { help: Boolean, overwrite: Boolean };
var shorthand   = { 'h': ['--help'], '0': ['--overwrite'] };

var getProject = function(sid, server, overwrite, emitter){

  //var fu = new FileUtil ("////362852-frtc2i1.extranet.iext/FMRoot2/Master/"+sid);

  var fu = null; // new FileUtil (path.join(config.fileServers[server],sid));

  fu.copy (process.cwd()+"/"+sid, overwrite,function (err, copied){
    if(err) return emitter.emit('error', new Error(err[0].errno+" "+err[0].code+" "+(err[0].path || err[0].description) ));

    emitter.emit('data', template('action', { name: 'copied', shizzle: sid }, true));
  });

};

module.exports = function (sid, server, options) {
  var emitter = new Emitter;

  options = options || {};

  getProject(sid, server, options.overwrite || false, emitter);

  return emitter;
};

module.exports.line = function (argv) {
  var options  = nopt(optionTypes, shorthand, argv);
  var args     = options.argv.remain.slice(1);

  if (options.help || args.length !== 2 || (args[1] !== 'stageing' && args[1] !== 'production')) return help('get-project');
  return module.exports(args[0], args[1], options);
};

module.exports.completion = function (opts, cb) {
    return cb(null, Object.keys(require('../commands')));
};
